const NatCorderWebGL={$sharedInstance:{framebuffer:null,framebufferContext:null,pixelBuffer:null,audioContext:null,audioBuffer:null,audioStream:null,recorder:null,isRecording:!1,MIME_TYPE:"video/webm"},NCInitialize:function(e,n,a){},NCStartRecording:function(e,n,a,r,t,s,o,d,c){console.log("NatCorder: Start recording invoked with resolution",e+"x"+n),sharedInstance.framebuffer=document.createElement("canvas"),sharedInstance.framebuffer.width=e,sharedInstance.framebuffer.height=n,sharedInstance.framebufferContext=sharedInstance.framebuffer.getContext("2d"),sharedInstance.pixelBuffer=sharedInstance.framebufferContext.getImageData(0,0,e,n);const f=[sharedInstance.framebuffer.captureStream(a).getVideoTracks()[0]];s&&(sharedInstance.audioContext=new AudioContext({latencyHint:"interactive",sampleRate:o}),sharedInstance.audioBuffer=sharedInstance.audioContext.createBuffer(c,d,o),sharedInstance.audioStream=sharedInstance.audioContext.createMediaStreamDestination({channelCount:c,channelCountMode:"explicit"}),f.push(sharedInstance.audioStream.stream.getAudioTracks()[0]));const u={mimeType:sharedInstance.MIME_TYPE,videoBitsPerSecond:r};sharedInstance.recorder=new MediaRecorder(new MediaStream(f),u),sharedInstance.recorder.start(),sharedInstance.isRecording=!0},NCStopRecording:function(){console.log("NatCorder: Stop recording invoked");const e=new Int32Array(HEAPU8.buffer,_malloc(Int32Array.BYTES_PER_ELEMENT),1);return e[0]=0,sharedInstance.recorder.ondataavailable=function(n){const a=new Blob([n.data],{type:sharedInstance.MIME_TYPE}),r=URL.createObjectURL(a);console.log("NatCorder: Completed recording video",a,"to URL:",r);const t=lengthBytesUTF8(r)+1,s=_malloc(t);stringToUTF8(r,s,t),e[0]=s},sharedInstance.recorder.stop(),sharedInstance.audioContext&&sharedInstance.audioContext.close(),sharedInstance.isRecording=!1,sharedInstance.recorder=null,sharedInstance.framebuffer=null,sharedInstance.framebufferContext=null,sharedInstance.pixelBuffer=null,sharedInstance.audioContext=null,e.byteOffset},NCIsRecording:function(){return sharedInstance.isRecording},NCEncodeFrame:function(e,n){sharedInstance.pixelBuffer.data.set(new Uint8ClampedArray(HEAPU8.buffer,e,sharedInstance.pixelBuffer.width*sharedInstance.pixelBuffer.height*4)),sharedInstance.framebufferContext.putImageData(sharedInstance.pixelBuffer,0,0)},NCEncodeSamples:function(e,n){e=new Float32Array(HEAPU8.buffer,e,sharedInstance.audioBuffer.numberOfChannels*sharedInstance.audioBuffer.length);for(var a=0;a<sharedInstance.audioBuffer.numberOfChannels;a++){const n=sharedInstance.audioBuffer.getChannelData(a);for(var r=0;r<sharedInstance.audioBuffer.length;r++)n[r]=e[r*sharedInstance.audioBuffer.numberOfChannels+a]}var t=sharedInstance.audioContext.createBufferSource();t.buffer=sharedInstance.audioBuffer,t.connect(sharedInstance.audioStream),t.start()}};autoAddDeps(NatCorderWebGL,"$sharedInstance"),mergeInto(LibraryManager.library,NatCorderWebGL);